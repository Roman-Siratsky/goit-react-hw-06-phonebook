{"version":3,"sources":["redux/phoneBook/phoneBookActions.js","components/ContactForm.jsx","components/Filter.jsx","components/ContactList.jsx","App.js","redux/phoneBook/phoneBookReducer.js","redux/store.js","index.js"],"names":["addContact","createAction","name","number","payload","id","shortId","generate","deleteContact","changeFilter","ContactForm","state","handleNameChange","event","currentTarget","value","setState","handleNumberChange","onExistingContactAlert","preventDefault","alert","getSomeOfName","optimizedContactName","toLowerCase","props","contacts","some","onAddNewContact","this","existingContact","action","htmlFor","onChange","type","disabled","length","onClick","e","Component","connect","phoneBook","dispatch","filter","handleFilterChange","window","placeholder","getVisibleContacts","optimizedFilterName","includes","onDeleteContact","map","contact","index","App","className","createReducer","actions","combineReducers","persistConfig","key","storage","blacklist","rootReducer","persistReducer","phoneBookReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f81465d1.chunk.js","sourcesContent":["// import * as types from './phoneBookTypes'\r\nimport shortId from 'shortid'\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\n\r\n\r\n\r\nexport const addContact = createAction('phoneBook/add', (name, number) => ({\r\n    payload:{\r\n        id: shortId.generate(),\r\n        name,\r\n        number,\r\n    }\r\n}))\r\nexport const deleteContact = createAction('phoneBook/delete')\r\nexport const changeFilter = createAction('phoneBook/filter')\r\nexport const makeAlert = createAction('phoneBook/alert')\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect } from 'react-redux'\r\nimport { addContact } from '../redux/phoneBook/phoneBookActions'\r\n\r\nclass ContactForm extends Component{\r\n    state = {\r\n        name: '',\r\n        number: '+38'\r\n    }\r\n    handleNameChange = (event) => {\r\n        const {name, value} = event.currentTarget\r\n        this.setState({ [name]: value })\r\n    }\r\n    handleNumberChange = (event) => {\r\n        const {name, value} = event.currentTarget\r\n        this.setState({[name]: value})\r\n    }\r\n    onExistingContactAlert = (event) => {\r\n        event.preventDefault()\r\n        this.setState({name: '', number: '+38'})\r\n        alert(this.state.name + ' уже есть в списке контактов')\r\n    }\r\n\r\n    getSomeOfName = (name) => {\r\n        const optimizedContactName = name.toLowerCase();\r\n        return this.props.contacts.some(({name}) => name.toLowerCase() === optimizedContactName)\r\n      }\r\n    \r\n    render() {\r\n        const { onAddNewContact } = this.props\r\n        const { name, number } = this.state\r\n        const existingContact = this.getSomeOfName(name)\r\n    return (\r\n            <form action=\"\">\r\n                <label htmlFor=\"\">\r\n                    Name <input\r\n                    name='name'\r\n                    onChange={this.handleNameChange}\r\n                    type=\"text\"\r\n                    value={name} />\r\n                </label>\r\n                <label htmlFor=\"\">\r\n                    Number <input\r\n                    name='number'\r\n                    onChange={this.handleNumberChange}\r\n                    type=\"tel\"\r\n                    value={number} />\r\n                </label>\r\n                <button\r\n                    disabled={(name.length && number.length > 3) \r\n                        ? false\r\n                        : true\r\n                    }\r\n                        onClick={existingContact\r\n                            ? this.onExistingContactAlert \r\n                            : (e) => {\r\n                                e.preventDefault()\r\n                                onAddNewContact(name, number)\r\n                                this.setState({name: '', number: '+38'})\r\n                    }}\r\n                    type='submit'>Создать\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddNewContact: (name, number) => dispatch(addContact(name, number)),\r\n})\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.phoneBook.contacts\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { changeFilter } from '../redux/phoneBook/phoneBookActions'\r\n\r\nconst Filter = (props) => {\r\n    window.props = props\r\n    return (\r\n        <label htmlFor=\"\">\r\n          <input\r\n            name='filter'\r\n            type='text'\r\n            placeholder='Search contacts'\r\n            value={props.value}\r\n            onChange={props.handleFilterChange}\r\n          />\r\n        </label>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.phoneBook.filter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleFilterChange: (e) => dispatch(changeFilter(e.currentTarget.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport { deleteContact } from '../redux/phoneBook/phoneBookActions';\r\nimport shortId from 'shortid'\r\n\r\n\r\nconst ContactList = (props) => {\r\n    return (\r\n          props.contacts.length\r\n          ? props.contacts.map((contact, index) => {\r\n            return (\r\n              <li key={contact.id}>\r\n                <p>{index + 1 + ') ' + contact.name + \" : \" + contact.number}</p>\r\n                <button onClick={() => props.onDeleteContact(contact.id)} type='button'>Удалить</button>\r\n              </li>\r\n            )\r\n          })\r\n          : <li key={shortId.generate()}>\r\n              <p>No saved contacts yet</p>\r\n            </li>\r\n    )\r\n}\r\n\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  const optimizedFilterName = filter.toLowerCase();\r\n  return contacts.filter(({name}) => name.toLowerCase().includes(optimizedFilterName))\r\n}\r\n\r\nconst mapStateToProps = ({phoneBook: {contacts, filter}}) => ({\r\n  contacts: getVisibleContacts(contacts, filter)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(deleteContact(id))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react'\nimport { Component } from 'react';\nimport ContactForm from './components/ContactForm'\nimport Filter from './components/Filter'\nimport ContactList from './components/ContactList'\n \n\n\nconst App = () => {\n    return (\n    <div className=\"App\">\n        <h1>PhoneBook</h1>\n          <ContactForm/>\n        <h2>Contacts</h2>\n          <Filter/>\n        <ul>\n          <ContactList/>\n        </ul>\n    </div>\n  )\n} \n\n\n\nexport default App;\n","import {combineReducers} from 'redux'\r\nimport {createReducer} from '@reduxjs/toolkit'\r\nimport * as actions from './phoneBookActions'\r\n\r\n\r\n\r\nconst contacts = createReducer([], {\r\n    [actions.addContact]: (state, action) => [...state, action.payload],\r\n    [actions.deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload)\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (state, action) => action.payload\r\n})\r\n\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter\r\n})\r\n","import {configureStore, getDefaultMiddleware, combineReducers} from '@reduxjs/toolkit'\r\nimport phoneBookReducer from './phoneBook/phoneBookReducer'\r\nimport logger from 'redux-logger'\r\nimport storage from 'redux-persist/lib/storage' \r\nimport \r\n{\r\n    persistReducer,\r\n    persistStore,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n}from 'redux-persist'\r\n\r\n\r\nconst persistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter']\r\n}\r\nconst rootReducer = combineReducers({\r\n    phoneBook: persistReducer(persistConfig, phoneBookReducer)\r\n})\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n        },\r\n    }),\r\n     logger,\r\n    ]\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nconst persistor = persistStore(store)\r\n \r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {store, persistor}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={'Loading'} persistor={store.persistor}>\n      <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}